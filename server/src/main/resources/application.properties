
#Database H2
spring.datasource.url=jdbc:h2:mem:test
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=as
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto = update


spring.h2.console.enabled=true
spring.h2.console.path=/as
spring.h2.console.settings.trace=false


#swagger:
project.openapi.dev-url=http://localhost:8080
project.openapi.prod-url=http://localhost:8080

spring.data.rest.basePath=/api/v1/


# Your desired user name
#spring.security.user.name=as
# password
#spring.security.user.password=as
# A comma separated list of roles
#spring.security.user.roles=USER


##google cloud storage

spring.cloud.gcp.project-id=mysocialnetwork-402302
spring.cloud.gcp.credentials.location=classpath:mysocialnetwork-402302-07ed157af036.json
gcp.bucket.name=khaled2sakhai
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
gcpConfigFile=mysocialnetwork-402302-07ed157af036.json


#google auth:
spring.security.oauth2.client.registration.google.client-id=286344551012-4ok86psv63q6iptel8331rrtsv3m5d8e.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirectUri: {baseUrl}/oauth2/callback/{registrationId}


app.cors.allowedOrigins=http://localhost:3000,http://localhost:8080

app.oauth2.authorizedRedirectUris=http://localhost:3000/oauth2/redirect,myandroidapp://oauth2/redirect,myiosapp://oauth2/redirect
server.use-forward-headers=true
tomcat.util.http.parser.HttpParser.requestTargetAllow=|,{,},[,]
server.tomcat.relaxed-path-chars=|,{,},[,]
server.tomcat.relaxed-query-chars=|,{,},[,]
server.maxHttpHeaderSize = 102400
